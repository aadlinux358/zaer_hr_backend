"""setup hr initial tables.

Revision ID: 4f25d1428172
Revises:
Create Date: 2022-10-12 10:47:04.806844
"""
import sqlalchemy as sa
import sqlmodel

from alembic import op

# revision identifiers, used by Alembic.
revision = "4f25d1428172"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    """Upgrade database."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "current_job",
        sa.Column(
            "title", sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False
        ),
        sa.Column(
            "date_created",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "date_modified",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "uid",
            sqlmodel.sql.sqltypes.GUID(),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
        ),
        sa.Column("created_by", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("modified_by", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.PrimaryKeyConstraint("uid"),
    )
    op.create_index(op.f("ix_current_job_title"), "current_job", ["title"], unique=True)
    op.create_index(op.f("ix_current_job_uid"), "current_job", ["uid"], unique=True)
    op.create_table(
        "department",
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
        sa.Column(
            "date_created",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "date_modified",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "uid",
            sqlmodel.sql.sqltypes.GUID(),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
        ),
        sa.Column("created_by", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("modified_by", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.PrimaryKeyConstraint("uid"),
    )
    op.create_index(op.f("ix_department_name"), "department", ["name"], unique=True)
    op.create_index(op.f("ix_department_uid"), "department", ["uid"], unique=True)
    op.create_table(
        "educational_level",
        sa.Column("level", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column(
            "date_created",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "date_modified",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "uid",
            sqlmodel.sql.sqltypes.GUID(),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
        ),
        sa.Column("created_by", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("modified_by", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.PrimaryKeyConstraint("uid"),
        sa.UniqueConstraint("level"),
    )
    op.create_index(
        op.f("ix_educational_level_uid"), "educational_level", ["uid"], unique=True
    )
    op.create_table(
        "nationality",
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column(
            "date_created",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "date_modified",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "uid",
            sqlmodel.sql.sqltypes.GUID(),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
        ),
        sa.Column("created_by", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("modified_by", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.PrimaryKeyConstraint("uid"),
        sa.UniqueConstraint("name"),
    )
    op.create_index(op.f("ix_nationality_uid"), "nationality", ["uid"], unique=True)
    op.create_table(
        "section",
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
        sa.Column(
            "date_created",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "date_modified",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "uid",
            sqlmodel.sql.sqltypes.GUID(),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
        ),
        sa.Column("created_by", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("modified_by", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("department_uid", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["department_uid"],
            ["department.uid"],
        ),
        sa.PrimaryKeyConstraint("uid"),
    )
    op.create_index(op.f("ix_section_name"), "section", ["name"], unique=True)
    op.create_index(op.f("ix_section_uid"), "section", ["uid"], unique=True)
    op.create_table(
        "sub_section",
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
        sa.Column(
            "date_created",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "date_modified",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "uid",
            sqlmodel.sql.sqltypes.GUID(),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
        ),
        sa.Column("created_by", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("modified_by", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("section_uid", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["section_uid"],
            ["section.uid"],
        ),
        sa.PrimaryKeyConstraint("uid"),
    )
    op.create_index(op.f("ix_sub_section_name"), "sub_section", ["name"], unique=True)
    op.create_index(op.f("ix_sub_section_uid"), "sub_section", ["uid"], unique=True)
    op.create_table(
        "employee",
        sa.Column("badge_number", sa.Integer(), nullable=False),
        sa.Column(
            "first_name", sqlmodel.sql.sqltypes.AutoString(length=200), nullable=False
        ),
        sa.Column(
            "last_name", sqlmodel.sql.sqltypes.AutoString(length=200), nullable=False
        ),
        sa.Column(
            "grandfather_name",
            sqlmodel.sql.sqltypes.AutoString(length=200),
            nullable=False,
        ),
        sa.Column("gender", sqlmodel.sql.sqltypes.AutoString(length=1), nullable=False),
        sa.Column("birth_date", sa.Date(), nullable=False),
        sa.Column("current_salary", sa.Numeric(), nullable=False),
        sa.Column("current_hire_date", sa.Date(), nullable=False),
        sa.Column("current_termination_date", sa.Date(), nullable=True),
        sa.Column("current_job_uid", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("sub_section_uid", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("nationality_uid", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column(
            "birth_place", sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False
        ),
        sa.Column(
            "mother_first_name",
            sqlmodel.sql.sqltypes.AutoString(length=100),
            nullable=False,
        ),
        sa.Column(
            "mother_last_name",
            sqlmodel.sql.sqltypes.AutoString(length=100),
            nullable=False,
        ),
        sa.Column("marital_status", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column(
            "educational_level_uid", sqlmodel.sql.sqltypes.GUID(), nullable=False
        ),
        sa.Column("phone_number", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("national_id", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("contract_type", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column(
            "national_service", sqlmodel.sql.sqltypes.AutoString(), nullable=False
        ),
        sa.Column(
            "date_created",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "date_modified",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "uid",
            sqlmodel.sql.sqltypes.GUID(),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
        ),
        sa.Column("created_by", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("modified_by", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["current_job_uid"],
            ["current_job.uid"],
        ),
        sa.ForeignKeyConstraint(
            ["educational_level_uid"],
            ["educational_level.uid"],
        ),
        sa.ForeignKeyConstraint(
            ["nationality_uid"],
            ["nationality.uid"],
        ),
        sa.ForeignKeyConstraint(
            ["sub_section_uid"],
            ["sub_section.uid"],
        ),
        sa.PrimaryKeyConstraint("uid"),
        sa.UniqueConstraint("national_id"),
        sa.UniqueConstraint("phone_number"),
    )
    op.create_index(
        op.f("ix_employee_badge_number"), "employee", ["badge_number"], unique=True
    )
    op.create_index(op.f("ix_employee_uid"), "employee", ["uid"], unique=True)
    op.create_table(
        "address",
        sa.Column("employee_uid", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("city", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("district", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column(
            "date_created",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "date_modified",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "uid",
            sqlmodel.sql.sqltypes.GUID(),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
        ),
        sa.Column("created_by", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("modified_by", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["employee_uid"],
            ["employee.uid"],
        ),
        sa.PrimaryKeyConstraint("uid"),
        sa.UniqueConstraint("employee_uid"),
    )
    op.create_index(op.f("ix_address_uid"), "address", ["uid"], unique=True)
    op.create_table(
        "child",
        sa.Column("parent_uid", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("first_name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("gender", sqlmodel.sql.sqltypes.AutoString(length=1), nullable=False),
        sa.Column("birth_date", sa.Date(), nullable=False),
        sa.Column(
            "date_created",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "date_modified",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "uid",
            sqlmodel.sql.sqltypes.GUID(),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
        ),
        sa.Column("created_by", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("modified_by", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["parent_uid"],
            ["employee.uid"],
        ),
        sa.PrimaryKeyConstraint("uid"),
        sa.UniqueConstraint("parent_uid", "first_name"),
    )
    op.create_index(op.f("ix_child_first_name"), "child", ["first_name"], unique=False)
    op.create_index(op.f("ix_child_uid"), "child", ["uid"], unique=True)
    op.create_table(
        "contact_person",
        sa.Column("employee_uid", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("first_name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("last_name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("phone_number", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column(
            "relationship_to_employee",
            sqlmodel.sql.sqltypes.AutoString(),
            nullable=False,
        ),
        sa.Column(
            "date_created",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "date_modified",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "uid",
            sqlmodel.sql.sqltypes.GUID(),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
        ),
        sa.Column("created_by", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("modified_by", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["employee_uid"],
            ["employee.uid"],
        ),
        sa.PrimaryKeyConstraint("uid"),
        sa.UniqueConstraint("employee_uid"),
        sa.UniqueConstraint("phone_number"),
    )
    op.create_index(
        op.f("ix_contact_person_uid"), "contact_person", ["uid"], unique=True
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade database."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_contact_person_uid"), table_name="contact_person")
    op.drop_table("contact_person")
    op.drop_index(op.f("ix_child_uid"), table_name="child")
    op.drop_index(op.f("ix_child_first_name"), table_name="child")
    op.drop_table("child")
    op.drop_index(op.f("ix_address_uid"), table_name="address")
    op.drop_table("address")
    op.drop_index(op.f("ix_employee_uid"), table_name="employee")
    op.drop_index(op.f("ix_employee_badge_number"), table_name="employee")
    op.drop_table("employee")
    op.drop_index(op.f("ix_sub_section_uid"), table_name="sub_section")
    op.drop_index(op.f("ix_sub_section_name"), table_name="sub_section")
    op.drop_table("sub_section")
    op.drop_index(op.f("ix_section_uid"), table_name="section")
    op.drop_index(op.f("ix_section_name"), table_name="section")
    op.drop_table("section")
    op.drop_index(op.f("ix_nationality_uid"), table_name="nationality")
    op.drop_table("nationality")
    op.drop_index(op.f("ix_educational_level_uid"), table_name="educational_level")
    op.drop_table("educational_level")
    op.drop_index(op.f("ix_department_uid"), table_name="department")
    op.drop_index(op.f("ix_department_name"), table_name="department")
    op.drop_table("department")
    op.drop_index(op.f("ix_current_job_uid"), table_name="current_job")
    op.drop_index(op.f("ix_current_job_title"), table_name="current_job")
    op.drop_table("current_job")
